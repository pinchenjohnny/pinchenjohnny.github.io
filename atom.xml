<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pin Chen&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-06T02:48:59.507Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Pin Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Develop Promotion Tools for Windows: Cmder + WSL + oh-my-zsh</title>
    <link href="http://yoursite.com/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/"/>
    <id>http://yoursite.com/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/</id>
    <published>2019-06-23T16:00:00.000Z</published>
    <updated>2019-09-06T02:48:59.507Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/cmder-wsl.png" alt="cmder-wsl" title>                </div>                <div class="image-caption">cmder-wsl</div>            </figure><p>Fig 1. Cmder with zsh in Windows with WSL</p><blockquote><p><strong>UPDATE 2019/8</strong></p><p>Here’s a better site <a href="https://dowww.spencerwoo.com/" target="_blank" rel="noopener">Dev on Windows with WSL</a> introducing the similar things, but more comprehensive and elegant.</p></blockquote><p>In this article, I’ll introduce:</p><ul><li><em>Cmder</em>: an intergrated shells console.</li><li><em>WSL</em>: Windows Subsystem for Linux, an embedded Linux kernel to give you Linux shell when you use Windows.</li><li><em>oh-my-zsh</em>: a powerful and beautiful shell to replace Linux bash.</li></ul><p>their sources, installation steps and usage.</p><p>After finishing this, you could get:</p><ul><li>say goodbye to cmd or powershell, replace these with <em>Cmder</em> and its convenient hotkeys.</li><li>run Linux shell commands when using Windows OS.</li><li>fast file management and commands operation experience.</li></ul><p>For what I not introduce, please check each tool’s doc given in relative part <strong>OR</strong> ask in Q&amp;A platform like <a href="https://superuser.com/" target="_blank" rel="noopener">Superuser</a>.</p><p><code>Prerequsition</code>:</p><ul><li>Win 10 OS</li><li>Anaconda package: download Linux version from the <a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">official site</a>.</li></ul><p>Contents:</p><ul><li><a href="#1-cmder">1. Cmder</a><ul><li><a href="#11-install">1.1 Install</a></li><li><a href="#12-hotkeys">1.2 Hotkeys</a></li></ul></li><li><a href="#2-wsl-windows-subsystem-for-linux">2. WSL (Windows Subsystem for Linux)</a><ul><li><a href="#21-install">2.1 Install</a></li><li><a href="#22-usage">2.2 Usage</a></li></ul></li><li><a href="#3-oh-my-zsh">3. oh-my-zsh</a><ul><li><a href="#31-install">3.1 Install</a></li><li><a href="#32-usage">3.2 Usage</a></li></ul></li><li><a href="#4-optional-install-anaconda-and-nodejs">4. [Optional] Install Anaconda and Node.js</a><ul><li><a href="#41-anaconda">4.1 Anaconda</a></li><li><a href="#42-nodejs-and-nvm">4.2 Node.js and nvm</a></li><li><a href="#references">References</a></li></ul></li></ul><h1 id="1-Cmder"><a href="#1-Cmder" class="headerlink" title="1. Cmder"></a>1. Cmder</h1><p><em>Cmder</em> concrete introduction and manual in <a href="https://github.com/cmderdev/cmder" target="_blank" rel="noopener">github</a>.</p><h2 id="1-1-Install"><a href="#1-1-Install" class="headerlink" title="1.1 Install"></a>1.1 Install</h2><p>(1) Download the <a href="https://github.com/cmderdev/cmder/releases/" target="_blank" rel="noopener">latest release</a>.</p><p>(2) extract and run <em>Cmder.exe</em>.</p><h2 id="1-2-Hotkeys"><a href="#1-2-Hotkeys" class="headerlink" title="1.2 Hotkeys"></a>1.2 Hotkeys</h2><p>`Ctrl + ``: Global Summon from taskbar</p><p><code>Alt + Enter</code>: Fullscreen</p><p><code>Ctrl + t</code>: New tab dialog</p><p><code>Ctrl + w</code>: Close tab</p><p><code>Win + Alt + p</code>: <em>Preferences</em></p><p><code>Ctrl + shift + r</code>: new a tab, split it to the right. If not successful, check <em>Preferences -&gt; Keys &amp; Macro</em></p><p><code>Ctrl + r</code>: History search</p><h1 id="2-WSL-Windows-Subsystem-for-Linux"><a href="#2-WSL-Windows-Subsystem-for-Linux" class="headerlink" title="2. WSL (Windows Subsystem for Linux)"></a>2. WSL (Windows Subsystem for Linux)</h1><p><a href="https://docs.microsoft.com/en-us/windows/wsl/about" target="_blank" rel="noopener"><em>WSL</em> doc</a> by Microsoft.</p><h2 id="2-1-Install"><a href="#2-1-Install" class="headerlink" title="2.1 Install"></a>2.1 Install</h2><p>(1) Toggle <em>Developer mode</em></p><p>In Windows, open <em>Settings -&gt; Update &amp; Security -&gt; For Developers</em>.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/toggle-developer-mode.jfif" alt="tdm" title>                </div>                <div class="image-caption">tdm</div>            </figure><p>Fig 2.1 Toggle developer mode</p><p>(2) Toggle Window feature WSL</p><p>Open <em>Control Panel -&gt; Programs -&gt; Turn windows features on or off</em>.</p><p>Toggle <em>Windows Subsystem for Linux</em> in the pop-up window.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/open-windows-feature-wsl.jfif" alt="opf" title>                </div>                <div class="image-caption">opf</div>            </figure><p>Fig 2.2 Toggle Window feature WSL</p><p>(3) Install Ubuntu</p><p>Search Ubuntu in <em>Microsoft Store</em>. Install Ubuntu the latest <em>Ubuntu 18.04 LTS</em>.</p><h2 id="2-2-Usage"><a href="#2-2-Usage" class="headerlink" title="2.2 Usage"></a>2.2 Usage</h2><p>Reboot and run Ubuntu. Voila, you get your Linux shell in Windows.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/linux-shell-in-win.jfif" alt="lsi" title>                </div>                <div class="image-caption">lsi</div>            </figure><p>Fig 2.3 Linux shell in Windows</p><p>But we want this shell in <em>Cmder</em>. Open <em>Cmder preferences -&gt; Startup -&gt; Tasks</em>. Add a {bash::ubuntu} task like Fig 2.4</p><pre><code>%windir%\system32\bash.exe ~ -cur_console:p</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/add-ubuntu-task-in-cmder.jpg" alt="aut" title>                </div>                <div class="image-caption">aut</div>            </figure><p>Fig 2.4 Add Ubuntu task in Cmder</p><p><code>Ctrl + T</code> to create a new console, choose {bash::ubuntu} and start.</p><p>To start <em>Cmder</em> with Ubuntu bash, open <em>Preferences -&gt; Startup</em>, toggle <em>Specified named task</em> and select {bash::ubuntu}.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/ubuntu-bash-as-startup.jpg" alt="uba" title>                </div>                <div class="image-caption">uba</div>            </figure><p>Fig 2.5 Start Cmder with Ubuntu bash</p><p>For <em>Anaconda</em> and <em>node.js</em> installation, see <a href="#4-optional-install-anaconda-and-nodejs">4. [Optional] Install Anaconda and Node.js</a>.</p><h1 id="3-oh-my-zsh"><a href="#3-oh-my-zsh" class="headerlink" title="3. oh-my-zsh"></a>3. oh-my-zsh</h1><p><em>oh-my-zsh</em> in <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">github</a>.</p><p>The actual shell we use to replace Ubuntu bash is called <em>zsh</em>, while <em>oh-my-zsh</em> is the framework to easily manage <em>zsh</em> config. So, install <em>zsh</em> first.</p><h2 id="3-1-Install"><a href="#3-1-Install" class="headerlink" title="3.1 Install"></a>3.1 Install</h2><p>(1) Install <em>zsh</em></p><p>In <em>WSL</em> Ubuntu bash in <em>Cmder</em>:</p><pre><code class="lang-sh">sudo apt-get install zshzsh --version</code></pre><p>the second line to check whether successfully install <em>zsh</em>.</p><p>(2) Install <em>oh-my-zsh</em></p><pre><code class="lang-sh">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></pre><h2 id="3-2-Usage"><a href="#3-2-Usage" class="headerlink" title="3.2 Usage"></a>3.2 Usage</h2><p>You can input “zsh” to switch <em>bash</em> to <em>zsh</em>, but we want {bash::ubuntu} task start with zsh, so add:</p><pre><code class="lang-sh">exec zsh</code></pre><p>in the end of <em>~/.bashrc</em>.</p><p>The power of <em>zsh</em> shows in its customization and plugins.</p><p>(1) Customization</p><p>In <em>~/.zshrc</em>, add:</p><pre><code class="lang-sh"># set aliasalias cls=&#39;clear&#39;alias grep=&quot;grep --color=auto&quot;alias javac=&quot;javac -J-Dfile.encoding=utf8&quot;alias ll=&#39;ls -l&#39;alias la=&#39;ls -a&#39;alias py=&quot;python&quot;alias vi=&#39;vim&#39;</code></pre><pre><code class="lang-sh">alias -s bz2=&#39;tar -xjvf&#39;</code></pre><p>the above line is to set:</p><p>input <code>file-name.bz2</code> in cmd line, open the .bz2 file with <code>tar -xjvf</code>, that is the follow two are equal:</p><pre><code class="lang-sh">file-name.bz2</code></pre><pre><code>tar -xjvf file-name.bz2</code></pre><p>Similar as:</p><pre><code class="lang-sh">alias -s c=vialias -s gz=&#39;tar -xzvf&#39;alias -s html=matealias -s java=vialias -s js=vialias -s py=vialias -s rb=matealias -s tgz=&#39;tar -xzvf&#39;alias -s txt=vialias -s zip=&#39;unzip&#39;</code></pre><p>(2) Plugin</p><p><strong><em>Git</em></strong>:</p><p>show <code>git:(branch)</code> when u in a git control dir.</p><p>simplify git commands like <code>g</code>=<code>git</code>. See <em>~/.oh-my-zsh/plugins/git/git.plugin.zsh</em> in detail.</p><p><strong><em>Autojump</em></strong>:</p><p><em>Autojump</em> in <a href="https://github.com/wting/autojump" target="_blank" rel="noopener">github</a>.</p><p>Autojumo will record your visited dir. Use cmd <code>j</code> to jump in directly.</p><pre><code class="lang-sh">git clone git://github.com/wting/autojump.gitcd autojumppython ./install.py</code></pre><p>check wether the following add to <em>~/.zshrc</em>. The path may be different. Refer to the prompts when installing:</p><pre><code class="lang-sh"># autojump. /usr/share/autojump/autojump.sh</code></pre><p><strong>zsh-autosuggestions</strong></p><p><em>zsh-autosuggestions</em> in <a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener">github</a>.</p><p>As you type commands, you will see a completion offered after the cursor in a muted gray color.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2019/06/24/Develop-Promotion-Tools-for-Windows-Cmder-WSL-oh-my-zsh/zsh-autosuggestions.jpg" alt="za" title>                </div>                <div class="image-caption">za</div>            </figure><p>For installation, clone it to <em>~/.oh-my-zsh/custom/plugins</em>:</p><pre><code class="lang-sh">cd ~/.oh-my-zsh/custom/plugins/git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions</code></pre><p>add the following to <em>~/.zshrc</em> to start a termial with <em>zsh-autosuggestions</em>:</p><pre><code class="lang-sh"># zsh-autosuggestionssource ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</code></pre><p>For usage, press the <code>→</code> key to accept the completion offered in a muted gray color.</p><h1 id="4-Optional-Install-Anaconda-and-Node-js"><a href="#4-Optional-Install-Anaconda-and-Node-js" class="headerlink" title="4. [Optional] Install Anaconda and Node.js"></a>4. [Optional] Install Anaconda and Node.js</h1><h2 id="4-1-Anaconda"><a href="#4-1-Anaconda" class="headerlink" title="4.1 Anaconda"></a>4.1 Anaconda</h2><p><em>Anaconda</em> <a href="https://www.anaconda.com/" target="_blank" rel="noopener">official site</a>.</p><p><em>Anaconda</em> is a python distribution, with installation and package management tools, like <em>conda</em> and <em>jupyter</em>.</p><p>Download its installer for Linux from the <a href="https://www.anaconda.com/distribution/" target="_blank" rel="noopener">official site</a>. </p><pre><code class="lang-sh"># run the Anaconda script and complete installation processbash Anaconda3-2019.03-Linux-x86_64.sh</code></pre><p>Add the the following to <em>~/.zshrc</em> if commands like <code>conda</code> not work:</p><pre><code class="lang-bash"># anacondaexport PATH=$PATH:/home/pinchen/anaconda3/bin</code></pre><h2 id="4-2-Node-js-and-nvm"><a href="#4-2-Node-js-and-nvm" class="headerlink" title="4.2 Node.js and nvm"></a>4.2 Node.js and nvm</h2><p><em>Node.js</em> is an open-source, cross-platform JavaScript run-time environment that executes JavaScript code outside of a browser.</p><p>I use <em>nvm</em> to install and manage <em>Node.js</em> in <em>WSL</em> Ubuntu.</p><p><em>nvm</em> in <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">github</a>.</p><p>(1) Install <em>nvm</em></p><pre><code class="lang-bash">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash</code></pre><p>If successfully installed, the following will output <code>nvm</code>:</p><pre><code class="lang-bash">command -v nvm</code></pre><p>If not work, add these to <em>~/.zshrc</em>:</p><pre><code class="lang-bash"># nvmexport NVM_DIR=&quot;$HOME/.nvm&quot;[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion</code></pre><p>(2) Install <em>Node.js</em></p><pre><code class="lang-bash">nvm install node # &quot;node&quot; is an alias for the latest version</code></pre><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/34133795" target="_blank" rel="noopener">Windows10开启Ubuntu子系统简易步骤</a>, Raysmond</li><li><a href="https://zhuanlan.zhihu.com/p/34152045" target="_blank" rel="noopener">Windows10终端优化方案：Ubuntu子系统+cmder+oh-my-zsh</a>, Raysmond</li><li><a href="https://zhuanlan.zhihu.com/p/19556676" target="_blank" rel="noopener">终极 Shell——ZSH</a>, 池建强</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
    
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
  </entry>
  
</feed>
